# roles/blob_indexer/tasks/main.yml
---
- name: "Include {{ ansible_distribution }} variables"
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"
  tags:
    - install
    - configure

- name: "Include {{ ansible_distribution }} tasks"
  include_tasks: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"
  tags: install

- name: Set properties
  set_fact:
    _blob_indexer:
      volume: "{{ item.1.volume }}"  # mandatory
      name: "{{ openio_blob_indexer_type }}-{{ item.1.id | default(item.0) }}"  # calculated
      id: "{{ item.1.id | default(item.0) }}"  # mandatory
      state: "{{ item.1.state | d('present') }}"
  with_indexed_items: "{{ openio_blob_indexer_instances }}"
  register: _blob_indexer_properties
  tags:
    - install
    - configure

- name: "Include tasks for blob_indexer state"
  include_tasks: "{{ bi.ansible_facts._blob_indexer.state }}.yml"
  tags:
    - install
    - configure
  with_items: "{{ _blob_indexer_properties.results }}"
  loop_control:
    loop_var: bi

- name: "Reload gridinit to apply the new configuration"
  shell: gridinit_cmd reload
  tags: configure
  when:
    - not openio_blob_indexer_provision_only
    - need_reload | default(false)

- name: "restart blob_indexer to apply the new configuration"
  command: "gridinit_cmd restart  {{ openio_blob_indexer_namespace }}-{{ item.ansible_facts._blob_indexer.name }}"
  tags: configure
  with_items: "{{ _blob_indexer_properties.results }}"
  when:
    - item.ansible_facts._blob_indexer.state == "present"
    - _blob_indexer_conf is changed
    - not openio_blob_indexer_provision_only

- block:
    - name: "Ensure blob_indexer is started"
      command: "gridinit_cmd start {{ openio_blob_indexer_namespace }}-{{ item.ansible_facts._blob_indexer.name }}"
      register: _start_blob_indexer
      changed_when: '"Success" in _start_blob_indexer.stdout'
      when: item.ansible_facts._blob_indexer.state == "present"
      with_items: "{{ _blob_indexer_properties.results }}"

    # TODO: add check

  tags: configure
  when:
    - not openio_blob_indexer_provision_only
    - openio_bootstrap | d(false)
...
